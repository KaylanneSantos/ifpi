----------------TABELA PRODUTO------------------
CREATE TABLE PRODUTO
(COD_PROD INT NOT NULL PRIMARY KEY,
NOME_PROD VARCHAR NOT NULL,
VALOR_VENDA FLOAT NOT NULL,
E_COMBO CHAR(1) NOT NULL CHECK (E_COMBO='s' OR E_COMBO='n'));
/*OBS: O CAMPO 'E_COMBO' INDICARÁ SE O PRODUTO É COMBO OU NÃO
       ELE PODERÁ RECEBER APENAS OS VALORES 's' MINÚSCULO 
	   QUE SIGNIFICARÁ 'SIM' OU 'n' MINÚSCULO QUE 
	   SIGNIFICARÁ 'NÃO'.*/

INSERT INTO PRODUTO VALUES
(1,'refrigerante',10,'n'),
(2,'sanduíche',15,'n'),
(3,'combo da semana',40,'s'),
(4,'mini-pizza',20,'n');

----------------TABELA COMBO------------------
CREATE TABLE COMBO
(COD_PROD_COMBO INT NOT NULL REFERENCES PRODUTO(COD_PROD),
COD_PROD_COMPOE INT NOT NULL REFERENCES PRODUTO(COD_PROD),
QUANT INT NOT NULL,
CONSTRAINT PRI_COMBO PRIMARY KEY(COD_PROD_COMBO,COD_PROD_COMPOE));

INSERT INTO COMBO VALUES
(3,1,2),
(3,2,1);

------------------TABELA FORNECEDOR-------------------
CREATE TABLE FORNECEDOR
(COD_FORN INT NOT NULL PRIMARY KEY,
NOME_FORN VARCHAR NOT NULL);

INSERT INTO FORNECEDOR VALUES
(1,'fornecedor 1'),
(2,'fornecedor 2'),
(3,'fornecedor 3');

--------------TABELA PEDIDO-----------------
CREATE TABLE PEDIDO
(COD_PEDIDO INT NOT NULL PRIMARY KEY,
COD_FORN INT NOT NULL REFERENCES FORNECEDOR(COD_FORN),
DT_PEDIDO DATE NOT NULL);

INSERT INTO PEDIDO VALUES
(1,1,'2024-08-11'),
(2,2,'2024-09-11');

-------------TABELA ITEM_PEDIDO---------------------
CREATE TABLE ITEM_PEDIDO
(COD_ITEM SERIAL NOT NULL PRIMARY KEY,
COD_PEDIDO INT NOT NULL REFERENCES PEDIDO(COD_PEDIDO),
COD_PROD INT NOT NULL REFERENCES PRODUTO(COD_PROD),
QUANTIDADE INT NOT NULL,
VALOR_TOTAL_ITEM FLOAT NOT NULL);

INSERT INTO ITEM_PEDIDO VALUES
(default,1,1,1,10),
(default,1,2,1,15),
(default,1,4,1,20),
(default,2,3,2,80);

-------------------TABELA TAB_PRECOS------------------
CREATE TABLE TAB_PRECOS
(COD_FORN INT NOT NULL REFERENCES FORNECEDOR(COD_FORN),
COD_PROD INT NOT NULL REFERENCES PRODUTO(COD_PROD),
VALOR_COMPRA FLOAT NOT NULL,
CONSTRAINT PRI_TAB_PRECOS PRIMARY KEY(COD_PROD,COD_FORN));

INSERT INTO TAB_PRECOS VALUES
(1,1,8),
(2,1,7.5),
(1,2,12.50),
(2,2,13),
(3,4,15);

----------------------------------------------------------------------------------------------------------------------------------------------------------

--Q1A) CADASTRAR COMBO
CREATE OR REPLACE FUNCTION CADASTRAR_PROD_COMBO()
RETURNS TRIGGER AS $$
DECLARE 
	--VALOR_V_COMBO FLOAT;
BEGIN
	--SELECT VALOR_VENDA INTO VALOR_V_COMBO FROM PRODUTO COD_PROD = NEW.COD_PROD;
	
	IF TG_OP = 'INSERT' THEN
		IF EXISTS(SELECT * FROM PRODUTO WHERE COD_PROD = NEW.COD_PROD AND E_COMBO = 's') THEN
			--LOGICA PARA ZERAR VALOR DA VENDA??????
		END IF;
	END IF;
	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER TG_CADASTRAR_PROD_COMBO
BEFORE INSERT ON PRODUTO
FOR EACH ROW
EXECUTE FUNCTION CADASTRAR_PROD_COMBO();

INSERT INTO PRODUTO VALUES(5,'batata frita',6.50,'s');
SELECT * FROM PRODUTO
DELETE FROM PRODUTO WHERE COD_PROD = 5

--Q1B VERIFICAR SE PRODUTO COMBO É REALMENTE UM COMBO

CREATE OR REPLACE FUNCTION VERIFICAR_COMBO()
RETURNS TRIGGER AS $$
DECLARE 
BEGIN
	IF EXISTS(SELECT * FROM COMBO WHERE COD_PROD_COMBO = NEW.COD_PROD_COMPOE) THEN
		RAISE EXCEPTION 'NÃO FOI POSSIVEL CADASTRAR O COMBO, POIS UM COMBO NÃO PODE COMPOR OUTRO COMBO.';
	END IF;
	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER TG_VERIFICAR_COMBO
BEFORE INSERT ON COMBO
FOR EACH ROW 
EXECUTE FUNCTION VERIFICAR_COMBO();

INSERT INTO COMBO VALUES (3,3,2);

--Q2A CRIAR FUNCAO QUE REALIZE PEDIDO(COD_PEDIDO, NOME DO PRODUTO, QUANTIDADE COMPRADA, NOME DO FORNECEDOR). OBS: AO REALIZAR O PEDIDO, DEVE-SE ANALIZAR
--DE QUAL FORNECEDOR O PRODUTO ESTA MAIS BARATO

CREATE OR REPLACE FUNCTION ADD_PEDIDO(COD_P INT, NOME_P VARCHAR(50), QUANT INT, NOME_F VARCHAR(50))
RETURNS VOID AS $$
DECLARE
	COD_PRODUTO INT;
	COD_FORNECEDOR INT;
	PROD_BARATO FLOAT;
	C_FORNECEDOR INT;
	VALOR_C FLOAT;
BEGIN
	SELECT COD_PROD INTO COD_PRODUTO FROM PRODUTO WHERE NOME_PROD ILIKE NOME_P;
	SELECT COD_FORN INTO COD_FORNECEDOR FROM FORNECEDOR WHERE NOME_FORN ILIKE NOME_F;
	SELECT COD_FORN INTO C_FORNECEDOR FROM TAB_PRECOS WHERE VALOR_COMPRA = (SELECT MIN(VALOR_COMPRA) FROM TAB_PRECOS WHERE COD_PROD = COD_PRODUTO) AND COD_PROD = COD_PRODUTO;
	SELECT VALOR_COMPRA INTO VALOR_C FROM TAB_PRECOS WHERE COD_PROD = COD_PRODUTO;
	

	IF C_FORNECEDOR != COD_FORNECEDOR THEN
		RAISE EXCEPTION 'O PRODUTO DO FORNECEDOR ESCOLHIDO NÃO É O MAIS BARATO. POR FAVOR, TENTE NOVAMENTE';
	ELSE
		IF EXISTS(SELECT * FROM PEDIDO WHERE COD_PEDIDO = COD_P) THEN
			UPDATE ITEM_PEDIDO SET 
				QUANTIDADE = QUANTIDADE + QUANT,
				VALOR_TOTAL_ITEM = VALOR_TOTAL_ITEM + (QUANT*VALOR_C)
			WHERE COD_PEDIDO = COD_P;
		ELSE
			INSERT INTO PEDIDO(COD_PEDIDO, COD_FORN, DT_PEDIDO) VALUES(COD_P, COD_FORNECEDOR, CURRENT_TIMESTAMP);
			INSERT INTO ITEM_PEDIDO(COD_PEDIDO, COD_PROD, QUANTIDADE, VALOR_TOTAL_ITEM) VALUES(COD_P, COD_PRODUTO, QUANT, (QUANT *  VALOR_C));
		END IF;
	END IF;
END;
$$ LANGUAGE PLPGSQL;

SELECT ADD_PEDIDO(2, 'SANDUÍCHE', 1, 'fornecedor 1')
SELECT * FROM PEDIDO
SELECT * FROM ITEM_PEDIDO