-----------------------------------------------------view relatórios------------------------------------------------------
--FUNCIONARIO
CREATE OR REPLACE VIEW VER_FUNCIONARIOS AS
SELECT 
	F.COD as "n°Id", 
	F.NOME as "Funcionário", 
	F.CPF as "cpf", 
	F.CONTATO as "Contato", 
	F.EMAIL as "Email", 
	C.NOME as "Cargo",
	L.NOME as "Loja",
	'R$ ' || TRIM(TO_CHAR(C.SALARIO, '999G999D00')) as "Salário Bruto",
	CASE
		WHEN COALESCE(SUM(CF.COMISSAO), 0) = 0 THEN 'R$ ' || 0.00
		ELSE 'R$ ' || TRIM(TO_CHAR(COALESCE(SUM(CF.COMISSAO), 0), '999G999D00'))
	END as "Comissão",
	'R$ ' || TRIM(TO_CHAR((C.SALARIO + COALESCE(SUM(CF.COMISSAO), 0)),'999G999D00')) as "Salario Líquido"
FROM FUNCIONARIO F
	JOIN CARGO C ON C.COD = F.COD_CARGO
	JOIN LOJA L ON L.COD = F.COD_LOJA
	LEFT JOIN COMISSAO_FUNCIONARIO CF ON CF.COD_FUNCIONARIO = F.COD
GROUP BY F.COD,C.NOME,C.SALARIO,L.NOME ORDER BY F.COD;

CREATE OR REPLACE FUNCTION VER_FUNCIONARIO(DT_INICIO DATE, DT_FIM DATE)
RETURNS TABLE(
	"n°Id" INT,
	"Funcionário" VARCHAR,
	"cpf" VARCHAR,
	"Contato" VARCHAR,
	"Email" VARCHAR,
	"Cargo" VARCHAR,
	"Loja" VARCHAR,
	"Salário Bruto" TEXT,
	"Comissão" TEXT,
	 "Salario Líquido" TEXT)AS $$
DECLARE
	DIAS INT;
BEGIN
	SELECT EXTRACT('DAY' FROM AGE(DT_FIM, DT_INICIO)) INTO DIAS;

	RETURN QUERY
		SELECT 
			F.COD, 
			F.NOME, 
			F.CPF, 
			F.CONTATO, 
			F.EMAIL, 
			C.NOME,
			L.NOME,
			'R$ ' || TRIM(TO_CHAR(C.SALARIO, '999G999D00')),
			CASE
				WHEN COALESCE(SUM(CF.COMISSAO), 0) = 0 THEN 'R$ ' || 0.00
				ELSE 'R$ ' || TRIM(TO_CHAR(COALESCE(SUM(CF.COMISSAO), 0), '999G999D00'))
			END as comissao,
			'R$ ' || TRIM(TO_CHAR((C.SALARIO + COALESCE(SUM(CF.COMISSAO), 0)),'999G999D00'))
		FROM FUNCIONARIO F
			JOIN CARGO C ON C.COD = F.COD_CARGO
			JOIN LOJA L ON L.COD = F.COD_LOJA
			LEFT JOIN COMISSAO_FUNCIONARIO CF ON CF.COD_FUNCIONARIO = F.COD
		--WHERE CF.DATA_COMISSAO >= DT_INICIO AND CF.DATA_COMISSAO < (DT_FIM + INTERVAL '1 DAY')
		WHERE (CF.DATA_COMISSAO IS NULL OR (CF.DATA_COMISSAO >= DT_INICIO AND CF.DATA_COMISSAO < (DT_FIM + INTERVAL '1 DAY')))
		GROUP BY F.COD,C.NOME,C.SALARIO,L.NOME ORDER BY F.COD;
END;
$$ LANGUAGE PLPGSQL;
--SELECT * FROM VER_FUNCIONARIO('12-08-2024', CURRENT_DATE)

--CLIENTE
CREATE OR REPLACE VIEW VER_CLIENTE AS
SELECT C.COD as "n°Id", 
	C.NOME as Nome, C.CPF as cpf, 
	C.CONTATO as Telefone, 
	C.EMAIL as Email
FROM CLIENTE C ORDER BY C.NOME;

--PRODUTO
CREATE OR REPLACE VIEW VER_PRODUTO AS
	SELECT 
		C.COD AS "id°Categoria", 
		C.NOME AS "Categoria", 
		P.COD AS "n°IdProduto",
		P.NOME AS "Produto", 
		'R$ ' || TO_CHAR(P.VALOR_UNITARIO, '999G999D00') AS "Valor",
		L.NOME AS "Loja", 
		L.CNPJ AS "CNPJ",
		L.ENDERECO AS "Endereço",
		E.QUANTIDADE AS "Quantidade em Estoque"
	FROM CATEGORIA C
		JOIN PRODUTO P ON P.COD_CATEGORIA = C.COD
		JOIN ESTOQUE E ON E.COD_PRODUTO = P.COD
		JOIN LOJA L ON E.COD_LOJA = L.COD
	ORDER BY C.COD;
	
-----------------------------------------------------Funções Relatório----------------------------------------------------------
CREATE OR REPLACE FUNCTION RELATORIO_PEDIDO(DT_I DATE, DT_F DATE)
RETURNS TABLE(
	"Produto" VARCHAR(100), 
	"Quantidade" INT, 
	"Valor Total" NUMERIC(8,2), 
	"Média Quantidade" INT, 
	"Média Valor Total" NUMERIC (8,2)) 
AS $$
DECLARE
	DIAS INT;
BEGIN
	SELECT EXTRACT('DAY' FROM AGE(DT_F,DT_I)) INTO DIAS;

	RETURN QUERY 
		SELECT 
			PDT.NOME PRODUTO, 
			SUM(IP.QUANTIDADE)::INT QUANTIDADE, 	
			SUM(IP.QUANTIDADE * PDT.VALOR_UNITARIO)::NUMERIC(8,2) VALOR_TOTAL,
			AVG(IP.QUANTIDADE/DIAS)::INT MEDIA_QUANTIDADE,
			AVG((IP.QUANTIDADE * PDT.VALOR_UNITARIO)/DIAS)::NUMERIC(8,2) MEDIA_VALOR_TOTAL
		FROM PEDIDO P
			JOIN ITEM_PEDIDO IP ON P.COD = IP.COD_PEDIDO
			JOIN ESTOQUE E ON E.COD = IP.COD_ESTOQUE
			JOIN PRODUTO PDT ON PDT.COD = E.COD_PRODUTO
		WHERE 
			PAGO = TRUE 
			AND DATA_HORA >= DT_I 
			AND DATA_HORA < (DT_F + INTERVAL '1 DAY')
		GROUP BY PRODUTO;
END;
$$ LANGUAGE PLPGSQL;