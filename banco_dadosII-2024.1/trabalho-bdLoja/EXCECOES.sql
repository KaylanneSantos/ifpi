------------------------------------------------EXCEÇÕES--------------------------------------------------------------
 
CREATE OR REPLACE FUNCTION VERIFICAR_ATRIBUTOS_INT(ATRIBUTOS VARCHAR[])
RETURNS VOID AS $$ 
DECLARE 
	ATRIBUTO VARCHAR;
BEGIN 
    FOREACH ATRIBUTO IN ARRAY ATRIBUTOS
    LOOP
		IF ATRIBUTO !~ '^[0-9]{3}\.[0-9]{3}\.[0-9]{3}\-[0-9]{2}$' --CPF
		AND ATRIBUTO !~ '^\([0-9]{2}\) [0-9]{5}\-[0-9]{4}$' -- CONTATO
		AND ATRIBUTO !~ '^[0-9]{2}\.[0-9]{3}\.[0-9]{3}/[0-9]{4}-[0-9]{2}$' THEN --CNPJ
			RAISE EXCEPTION 'ERROR: O VALOR DO ATRIBUTO "%", NÃO É VÁLIDO.', ATRIBUTO;
		ELSIF ATRIBUTO = '' OR TRIM(ATRIBUTO) = '' THEN
			RAISE EXCEPTION 'ERROR: O ATRIBUTO NÃO PODE ESTAR VÁZIO E PRECISA SER PREENCHIDO.';
		END IF;
    END LOOP;
END;
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION TG_VERIFICAR_ATRIBUTOS_INT()
RETURNS TRIGGER AS $$
BEGIN
    PERFORM VERIFICAR_ATRIBUTOS_INT(ARRAY[NEW.CPF, NEW.CONTATO]);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql; 

CREATE OR REPLACE FUNCTION TG_VERIFICAR_ATRIBUTO_CNPJ() -- TRIGGER VERIFICAR CNPJ
RETURNS TRIGGER AS $$
BEGIN
    PERFORM VERIFICAR_ATRIBUTOS_INT(ARRAY[NEW.CNPJ]);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

--TRIGGER BY TABLE
CREATE TRIGGER TG_CHECK_INT
BEFORE INSERT OR UPDATE ON CLIENTE
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_INT();

CREATE TRIGGER TG_CHECK_INT
BEFORE INSERT OR UPDATE ON FUNCIONARIO
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_INT();

CREATE TRIGGER TG_CHECK_INT
BEFORE INSERT OR UPDATE ON LOJA
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTO_CNPJ();

---------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION VERIFICAR_ATRIBUTOS_VARCHAR(ATRIBUTO VARCHAR)
RETURNS VOID AS $$
BEGIN
	IF ATRIBUTO !~ '^[a-zA-Z\sá-úÁ-Ú]+$' THEN 
		RAISE EXCEPTION 'ERROR: O VALOR DO ATRIBUTO "%", NÃO É VÁLIDO.', ATRIBUTO;
	ELSIF ATRIBUTO = '' OR TRIM(ATRIBUTO) = '' THEN
		RAISE EXCEPTION 'ERROR: O ATRIBUTO NÃO PODE ESTAR VÁZIO E PRECISA SER PREENCHIDO.';
	END IF;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR()
RETURNS TRIGGER AS $$
BEGIN
    PERFORM VERIFICAR_ATRIBUTOS_VARCHAR(NEW.NOME);
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

--TRIGGER BY TABLE
CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON CLIENTE
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();

CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON CARGO
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();

CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON FUNCIONARIO
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();

CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON PAGAMENTO
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();

CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON CATEGORIA
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();

CREATE TRIGGER TRIGGER_CHECK_VARCHAR
BEFORE INSERT OR UPDATE ON PRODUTO
FOR EACH ROW
EXECUTE FUNCTION TG_VERIFICAR_ATRIBUTOS_VARCHAR();