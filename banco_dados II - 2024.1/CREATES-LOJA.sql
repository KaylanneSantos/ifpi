CREATE TABLE CLIENTE(
	COD_CLIENTE SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(100) NOT NULL,
	CPF VARCHAR(15) NOT NULL UNIQUE,
	CONTATO VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL
);

INSERT INTO CLIENTE (NOME, CPF, CONTATO, EMAIL) VALUES 
	('Maria Silva', '123.456.789-10', '(11) 91234-5678', 'maria.silva@gmail.com'),
	('Jo√£o Oliveira', '987.654.321-00', '(21) 99876-5432', 'joao.oliveira@gmail.com'),
	('Ana Santos', '456.789.123-45', '(31) 98765-4321', 'ana.santos@gmail.com'),
	('Pedro Souza', '654.321.987-00', '(41) 97654-3210', 'pedro.souza@gmail.com'),
	('Mariana Lima', '789.123.456-78', '(51) 96543-2109', 'mariana.lima@gmail.com'),
	('Carlos Pereira', '234.567.890-12', '(61) 95432-1098', 'carlos.pereira@gmail.com'),
	('Juliana Costa', '876.543.210-98', '(71) 94321-0987', 'juliana.costa@gmail.com'),
	('Fernando Oliveira', '345.678.901-23', '(81) 93210-9876', 'fernando.oliveira@gmail.com'),
	('Amanda Rodrigues', '567.890.123-45', '(91) 92109-8765', 'amanda.rodrigues@gmail.com'),
	('Lucas Almeida', '901.234.567-89', '(10) 91087-6543', 'lucas.almeida@gmail.com');

CREATE TABLE CARGO(
	COD_CARGO SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL,
	SALARIO NUMERIC(8,2) NOT NULL
);

INSERT INTO CARGO (NOME, SALARIO) VALUES 
	('Gerente', 5000.00),
	('Supervisor', 4000.00),
	('Assistente', 3000.00),
	('Caixa', 2500.00),
	('Estoquista', 2200.00);

CREATE TABLE LOJA(
	COD_LOJA SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(50) NOT NULL
);
INSERT INTO LOJA (NOME) VALUES 
	('Loja 1'),
	('Loja 2'),
	('Loja 3'),
	('Loja 4'),
	('Loja 5');

CREATE TABLE FUNCIONARIO(
	COD_FUNCIONARIO SERIAL NOT NULL PRIMARY KEY,
	COD_CARGO INT NOT NULL REFERENCES CARGO(COD_CARGO) 
		ON UPDATE CASCADE 
		ON DELETE RESTRICT,
	COD_LOJA INT NOT NULL REFERENCES LOJA(COD_LOJA) 
		ON UPDATE CASCADE 
		ON DELETE RESTRICT,
	NOME VARCHAR(100) NOT NULL,
	CPF VARCHAR(15) NOT NULL UNIQUE,
	CONTATO VARCHAR(20) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL
	--CONSTRAINT FK_CARGO FOREIGN KEY(COD_CARGO) REFERENCES CARGO(COD_CARGO) ON UPDATE CASCADE ON DELETE RESTRICT,
	--CONSTRAINT FK_LOJA FOREIGN KEY(COD_LOJA) REFERENCES LOJA(COD_LOJA) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE PAGAMENTO(
	COD_PAGAMENTO SERIAL NOT NULL PRIMARY KEY,
	TIPO VARCHAR(50) NOT NULL
);

CREATE TABLE CATEGORIA(
	COD_CATEGORIA SERIAL NOT NULL PRIMARY KEY,
	NOME VARCHAR(100) NOT NULL,
	DESCRICAO TEXT NOT NULL
);

CREATE TABLE PRODUTO(
	COD_PRODUTO SERIAL NOT NULL PRIMARY KEY,
	COD_CATEGORIA INT NOT NULL,
	NOME VARCHAR(50) NOT NULL,
	VALOR_UNITARIO NUMERIC(8,2) NOT NULL,
	CONSTRAINT FK_CATEGORIA FOREIGN KEY(COD_CATEGORIA) REFERENCES CATEGORIA(COD_CATEGORIA) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE ESTOQUE(
	COD_ESTOQUE SERIAL NOT NULL PRIMARY KEY, 
	COD_PRODUTO INT NOT NULL,
	COD_LOJA INT NOT NULL,
	QUANTIDADE INT NOT NULL,
	CONSTRAINT FK_PRODUTO FOREIGN KEY(COD_PRODUTO) REFERENCES PRODUTO(COD_PRODUTO) ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT FK_LOJA FOREIGN KEY(COD_LOJA) REFERENCES LOJA(COD_LOJA) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE PEDIDO(
	COD_PEDIDO SERIAL NOT NULL PRIMARY KEY,
	COD_CLIENTE INT NOT NULL,
	COD_FUNCIONARIO INT NOT NULL,
	COD_PAGAMENTO INT NOT NULL,
	VALOR_TOTAL NUMERIC(8,2) NOT NULL,
	DATA_HORA TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	PAGO BOOLEAN DEFAULT FALSE NOT NULL,
	CONSTRAINT FK_CLIENTE FOREIGN KEY(COD_CLIENTE) REFERENCES CLIENTE(COD_CLIENTE) ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT FK_FUNCIONARIO FOREIGN KEY(COD_FUNCIONARIO) REFERENCES FUNCIONARIO(COD_FUNCIONARIO) ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT FK_PAGAMENTO FOREIGN KEY(COD_PAGAMENTO) REFERENCES PAGAMENTO(COD_PAGAMENTO) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE ITEM_PEDIDO(
	COD_ITEM_PEDIDO SERIAL NOT NULL PRIMARY KEY,
	COD_PEDIDO INT NOT NULL,
	COD_ESTOQUE INT NOT NULL,
	QUANTIDADE INT NOT NULL,
	VALOR_TOTAL_ITEM NUMERIC(8,2) NOT NULL,
	CONSTRAINT FK_PEDIDO FOREIGN KEY(COD_PEDIDO) REFERENCES PEDIDO(COD_PEDIDO) ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT FK_ESTOQUE FOREIGN KEY(COD_ESTOQUE) REFERENCES ESTOQUE(COD_ESTOQUE) ON UPDATE CASCADE ON DELETE RESTRICT
);

--INSERT's
